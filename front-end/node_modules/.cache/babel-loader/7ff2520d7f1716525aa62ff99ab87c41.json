{"ast":null,"code":"var _jsxFileName = \"/home/karim/Desktop/Project/construction/front-end/src/components/pages/constructionPage/ConstructionElements.js\";\nimport React, { useState, Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button, { Btn } from \"../../Button\";\nimport Color from \"../../../constants/Color\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Div = styled.div`\n  text-align: center;\n  margin-top: 40px;\n\n  @media screen and (max-width: 810px) {\n    margin-top: 250px;\n  }\n`;\nexport class ConstCostEstimator extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleChange = () => {\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n\n    this.state = {\n      isChecked: true\n    };\n    this.state = {\n      size: \"Plot Size\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      size: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    alert(`You chose the ${this.state.size} pizza.`);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border row\",\n        style: {\n          marginTop: 50,\n          backgroundColor: \"#F8F8F6\",\n          width: 400,\n          borderRadius: 5,\n          textAlign: \"center\",\n          justifyContent: \"center\" // color: Color.primary,\n\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: 15\n          },\n          children: \"Construction Cost Estimator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            justifyContent: \"flex-start\",\n            textAlign: \"start\",\n            width: 250,\n            paddingTop: 20\n          },\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            checked: true,\n            className: \"form-check-input mt-1\",\n            type: \"radio\",\n            value: \"Plot Size\",\n            style: {\n              marginRight: 15\n            },\n            checked: this.state.size === \"Plot Size\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Plot Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input mt-1\",\n            type: \"radio\",\n            value: \"Site Area\",\n            style: {\n              margin: 20\n            },\n            checked: this.state.size === \"Site Area\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Site Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block row\",\n            style: {\n              justifyContent: \"start\",\n              textAlign: \"start\"\n            },\n            children: [this.state.size === \"Plot Size\" && /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: 210,\n                height: 30,\n                marginLeft: 15,\n                paddingLeft: 5,\n                marginRight: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"30 X 40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"30 X 50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"40 X 60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), this.state.size === \"Site Area\" && /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                position: \"relative\"\n              },\n              children: [\"Plot Size\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                style: {\n                  width: 110,\n                  marginLeft: 15,\n                  paddingLeft: 5,\n                  marginRight: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: \"absolute\",\n                  top: 1\n                },\n                children: \"Sqft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 5\n                },\n                children: \"Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"text\",\n                style: {\n                  width: 155,\n                  marginLeft: 10,\n                  marginTop: 20,\n                  height: 30\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"Ground\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Ground + 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Ground + 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Ground + 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  margin: 5\n                },\n                type: \"checkbox\",\n                defaultChecked: this.state.isChecked,\n                onChange: this.toggleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  margin: 5\n                },\n                children: \"Car Parking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), console.log(this.state.isChecked), this.state.isChecked && /*#__PURE__*/_jsxDEV(\"select\", {\n                style: {\n                  width: 80,\n                  marginLeft: 10,\n                  height: 30,\n                  marginTop: 10\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Btn, {\n          children: \"Estimator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row border\",\n        style: {\n          justifyContent: \"center\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CostEstimate, {\n          className: \"col-3 border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostEstimate, {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostEstimate, {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostEstimate, {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst CostEstimate = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"red\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1700/ Sqft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}; // export const ConstCostEstimator = () => {\n//   const [inputType, setInputType] = useState(\"Plot Size\");\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     console.log(value);\n//     setInputType(value);\n//   };\n//   const handleSubmit = (event) => {\n//     console.log(inputType);\n//     event.preventDefault();\n//   };\n// return (\n//   <div\n//     className=\"border\"\n//     style={{\n//       marginTop: 50,\n//       backgroundColor: \"#F8F8F6\",\n//       width: 450,\n//       borderRadius: 5,\n//     }}\n//   >\n//     <h4 style={{ marginTop: 15 }}>Construction Cost Estimator</h4>\n//     <div\n//       style={{ justifyContent: \"center\", textAlign: \"center\" }}\n//       onSubmit={handleSubmit}\n//     >\n//       <input\n//         checked\n//         type=\"radio\"\n//         name=\"PlotOrArea\"\n//         value=\"Plot Size\"\n//         style={{ margin: 15 }}\n//         onChange={handleChange}\n//       />\n//       <label>Plot Size</label>\n//       <input\n//         type=\"radio\"\n//         name=\"PlotOrArea\"\n//         value=\"Site Area\"\n//         style={{ margin: 20 }}\n//         onChange={handleChange}\n//       />\n//       <label>Site Area</label>\n//       {console.log(inputType)}\n//       <br />\n//       <div className=\"block\">\n//         {inputType === \"Plot Size\" && <input />}\n//         {inputType === \"Site Area\" && (\n//           <label style={{ position: \"relative\" }}>\n//             Plot Size\n//             <input\n//               type=\"number\"\n//               style={{\n//                 width: 110,\n//                 marginLeft: 15,\n//                 paddingLeft: 5,\n//                 marginRight: 5,\n//               }}\n//             />\n//             <span style={{ position: \"absolute\", top: 1 }}>Sqft</span>\n//           </label>\n//         )}\n//       </div>\n//     </div>\n//   </div>\n// );\n// };\n\n\n_c = CostEstimate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostEstimate\");","map":{"version":3,"sources":["/home/karim/Desktop/Project/construction/front-end/src/components/pages/constructionPage/ConstructionElements.js"],"names":["React","useState","Component","styled","Button","Btn","Color","Div","div","ConstCostEstimator","constructor","toggleChange","setState","isChecked","state","size","handleChange","bind","handleSubmit","event","target","value","preventDefault","alert","render","marginTop","backgroundColor","width","borderRadius","textAlign","justifyContent","paddingTop","marginRight","margin","height","marginLeft","paddingLeft","position","top","console","log","CostEstimate"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button, { Btn } from \"../../Button\";\nimport Color from \"../../../constants/Color\";\n\nimport \"./style.css\";\nexport const Div = styled.div`\n  text-align: center;\n  margin-top: 40px;\n\n  @media screen and (max-width: 810px) {\n    margin-top: 250px;\n  }\n`;\n\nexport class ConstCostEstimator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isChecked: true,\n    };\n    this.state = {\n      size: \"Plot Size\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  toggleChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    });\n  };\n  handleChange(event) {\n    this.setState({\n      size: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    alert(`You chose the ${this.state.size} pizza.`);\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"border row\"\n          style={{\n            marginTop: 50,\n            backgroundColor: \"#F8F8F6\",\n            width: 400,\n            borderRadius: 5,\n            textAlign: \"center\",\n            justifyContent: \"center\",\n            // color: Color.primary,\n          }}\n        >\n          <h4 style={{ marginTop: 15 }}>Construction Cost Estimator</h4>\n          <div\n            style={{\n              justifyContent: \"flex-start\",\n              textAlign: \"start\",\n              width: 250,\n              paddingTop: 20,\n            }}\n            onSubmit={this.handleSubmit}\n          >\n            <input\n              checked\n              className=\"form-check-input mt-1\"\n              type=\"radio\"\n              value=\"Plot Size\"\n              style={{ marginRight: 15 }}\n              checked={this.state.size === \"Plot Size\"}\n              onChange={this.handleChange}\n            />\n            <label>Plot Size</label>\n\n            <input\n              className=\"form-check-input mt-1\"\n              type=\"radio\"\n              value=\"Site Area\"\n              style={{ margin: 20 }}\n              checked={this.state.size === \"Site Area\"}\n              onChange={this.handleChange}\n            />\n            <label>Site Area</label>\n\n            <br />\n            <div\n              className=\"block row\"\n              style={{ justifyContent: \"start\", textAlign: \"start\" }}\n            >\n              {this.state.size === \"Plot Size\" && (\n                <select\n                  style={{\n                    width: 210,\n                    height: 30,\n                    marginLeft: 15,\n                    paddingLeft: 5,\n                    marginRight: 5,\n                  }}\n                >\n                  <option selected>Select</option>\n                  <option value=\"1\">30 X 40</option>\n                  <option value=\"2\">30 X 50</option>\n                  <option value=\"3\">40 X 60</option>\n                </select>\n              )}\n              {this.state.size === \"Site Area\" && (\n                <label style={{ position: \"relative\" }}>\n                  Plot Size\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    style={{\n                      width: 110,\n                      marginLeft: 15,\n                      paddingLeft: 5,\n                      marginRight: 5,\n                    }}\n                  />\n                  <span style={{ position: \"absolute\", top: 1 }}>Sqft</span>\n                </label>\n              )}\n\n              <div className=\"block\">\n                <label style={{ margin: 5 }}>Floor</label>\n                <select\n                  type=\"text\"\n                  style={{\n                    width: 155,\n                    marginLeft: 10,\n                    marginTop: 20,\n                    height: 30,\n                  }}\n                >\n                  <option disabled>Select</option>\n                  <option value=\"1\">Ground</option>\n                  <option value=\"2\">Ground + 1</option>\n                  <option value=\"3\">Ground + 2</option>\n                  <option value=\"3\">Ground + 3</option>\n                </select>\n              </div>\n              <div>\n                <input\n                  style={{ margin: 5 }}\n                  type=\"checkbox\"\n                  defaultChecked={this.state.isChecked}\n                  onChange={this.toggleChange}\n                />\n                <label style={{ margin: 5 }}>Car Parking</label>\n                {console.log(this.state.isChecked)}\n                {this.state.isChecked && (\n                  <select\n                    style={{\n                      width: 80,\n                      marginLeft: 10,\n                      height: 30,\n                      marginTop: 10,\n                    }}\n                  >\n                    <option selected value=\"1\">\n                      1\n                    </option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                  </select>\n                )}\n              </div>\n            </div>\n          </div>\n          {/* <Button text=\"Estimate\" color={Color.primary} type={true} /> */}\n          <Btn>Estimator</Btn>\n        </div>\n        <div\n          className=\"row border\"\n          style={{\n            justifyContent: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <CostEstimate className=\"col-3 border\" />\n          <CostEstimate className=\"col\" />\n          <CostEstimate className=\"col\" />\n          <CostEstimate className=\"col\" />\n        </div>\n      </>\n    );\n  }\n}\n\nconst CostEstimate = () => {\n  return (\n    <div style={{ width: 400 }}>\n      <div style={{ backgroundColor: \"red\" }}>\n        <p>Standard</p>\n        <p>1700/ Sqft</p>\n      </div>\n    </div>\n  );\n};\n\n// export const ConstCostEstimator = () => {\n//   const [inputType, setInputType] = useState(\"Plot Size\");\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     console.log(value);\n//     setInputType(value);\n//   };\n//   const handleSubmit = (event) => {\n//     console.log(inputType);\n//     event.preventDefault();\n//   };\n// return (\n//   <div\n//     className=\"border\"\n//     style={{\n//       marginTop: 50,\n//       backgroundColor: \"#F8F8F6\",\n//       width: 450,\n//       borderRadius: 5,\n//     }}\n//   >\n//     <h4 style={{ marginTop: 15 }}>Construction Cost Estimator</h4>\n//     <div\n//       style={{ justifyContent: \"center\", textAlign: \"center\" }}\n//       onSubmit={handleSubmit}\n//     >\n//       <input\n//         checked\n//         type=\"radio\"\n//         name=\"PlotOrArea\"\n//         value=\"Plot Size\"\n//         style={{ margin: 15 }}\n//         onChange={handleChange}\n//       />\n//       <label>Plot Size</label>\n\n//       <input\n//         type=\"radio\"\n//         name=\"PlotOrArea\"\n//         value=\"Site Area\"\n//         style={{ margin: 20 }}\n//         onChange={handleChange}\n//       />\n//       <label>Site Area</label>\n//       {console.log(inputType)}\n//       <br />\n//       <div className=\"block\">\n//         {inputType === \"Plot Size\" && <input />}\n//         {inputType === \"Site Area\" && (\n//           <label style={{ position: \"relative\" }}>\n//             Plot Size\n//             <input\n//               type=\"number\"\n//               style={{\n//                 width: 110,\n//                 marginLeft: 15,\n//                 paddingLeft: 5,\n//                 marginRight: 5,\n//               }}\n//             />\n//             <span style={{ position: \"absolute\", top: 1 }}>Sqft</span>\n//           </label>\n//         )}\n//       </div>\n//     </div>\n//   </div>\n// );\n// };\n"]},"metadata":{},"sourceType":"module"}